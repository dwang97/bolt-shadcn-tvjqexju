import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";

const FAQ_ITEMS = [
  {
    question: "How can I be sure that the content is undetectable?",
    answer: "Our AI has been trained on millions of human-written texts and uses advanced techniques to ensure the output is indistinguishable from human writing. We continuously test against all major AI detection tools and update our models accordingly.",
  },
  {
    question: "What refund policy do you have?",
    answer: "If any content we produce is flagged as AI-generated by mainstream detection tools, we'll refund the cost of that specific humanization. Just contact our support team with proof of the detection.",
  },
  {
    question: "Do unused credits accumulate?",
    answer: "Words reset monthly and don't carry over to the next billing cycle. This helps us maintain fair usage and optimal service quality for all users.",
  },
  {
    question: "What happens if I barely use words during a month?",
    answer: "Your subscription continues normally. While unused words don't roll over, you maintain access to all features and can use your full allocation in subsequent months.",
  },
  {
    question: "What is the cancellation policy?",
    answer: "You can cancel your subscription at any time. You'll maintain access to your plan until the end of your current billing period. No refunds for unused time or words.",
  },
];

export function PricingFAQ() {
  return (
    <div className="max-w-3xl mx-auto">
      <h2 className="text-3xl font-serif text-center mb-12">FAQ</h2>
      <Accordion type="single" collapsible className="space-y-4">
        {FAQ_ITEMS.map((item, index) => (
          <AccordionItem
            key={index}
            value={`item-${index}`}
            className="border border-amber-200/50 bg-white rounded-lg px-6"
          >
            <AccordionTrigger className="text-lg font-serif hover:text-amber-800">
              {item.question}
            </AccordionTrigger>
            <AccordionContent className="text-amber-700">
              {item.answer}
            </AccordionContent>
          </AccordionItem>
        ))}
      </Accordion>
    </div>
  );
}